// This file was generated by Mendix Modeler 7.23.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MyFirstModule module
	public static java.util.List<myfirstmodule.proxies.Entity> dS_RecordsWithTimes(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "MyFirstModule.DS_RecordsWithTimes", params);
			java.util.List<myfirstmodule.proxies.Entity> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<myfirstmodule.proxies.Entity>();
				for (IMendixObject obj : objs)
					result.add(myfirstmodule.proxies.Entity.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getAFromB(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetAFromB", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getAFromC(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetAFromC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getAFromD(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetAFromD", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getBFromA(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetBFromA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getBFromC(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetBFromC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getBFromD(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetBFromD", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getCFromA(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetCFromA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getCFromB(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetCFromB", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getCFromD(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetCFromD", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getDFromA(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetDFromA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getDFromB(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetDFromB", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void getDFromC(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.GetDFromC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void roundDateA(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.RoundDateA", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void roundDateB(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.RoundDateB", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void roundDateC(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.RoundDateC", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void roundDateD(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.RoundDateD", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setAZone(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.SetAZone", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setBZone(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.SetBZone", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setCZone(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.SetCZone", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void setDZone(IContext context, myfirstmodule.proxies.Entity _entity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Entity", _entity == null ? null : _entity.getMendixObject());
			Core.execute(context, "MyFirstModule.SetDZone", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void tEST_SUB_RoundDate(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.TEST_SUB_RoundDate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void tEST_SUB_UTCDateHasTime(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.TEST_SUB_UTCDateHasTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}